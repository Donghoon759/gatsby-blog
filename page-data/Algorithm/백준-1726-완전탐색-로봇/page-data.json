{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/백준-1726-완전탐색-로봇/","result":{"data":{"site":{"siteMetadata":{"title":"사진찍는 웹 개발자","author":"Donghoon Song","siteUrl":"https://donghoon759.github.io","comment":{"disqusShortName":"Donghoon","utterances":"Donghoon759/gatsby-blog"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"627d6870-cfea-50ce-a495-179848457e25","excerpt":"문제 1,2,3칸을 가는데 가는 길에 1이 있으면 더 이상 진행하지 않는다. bfs돌때 좌표뿐만 아니라 방향도 고려해야 한다. 맵을 벗어나면 더 이상 진행하지 않는다. (M, N이 경계인데 100을 경계로 둬서 영문도 모른 채 틀렸던 실수를 했던 뼈아픈 문제…)","html":"<p><a href=\"https://www.acmicpc.net/problem/1726\">문제</a></p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n<span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;queue></span></span>\n<span class=\"gatsby-highlight-code-line\"></span><span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\">#<span class=\"token directive keyword\">define</span> len_max 101</span>\n\n<span class=\"token keyword\">int</span> dx<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> dy<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> M<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> map<span class=\"token punctuation\">[</span>len_max<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>len_max<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">robot</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">int</span> x<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> y<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> dir<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> move<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> start_x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> start_y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> start_dir<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> end_x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> end_y<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> end_dir<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tqueue<span class=\"token operator\">&lt;</span>robot<span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">bool</span> visited<span class=\"token punctuation\">[</span>len_max<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>len_max<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> M<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> N<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">&lt;=</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n\t\t\t\tvisited<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">int</span> directions<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> steps<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\trobot r<span class=\"token punctuation\">;</span>\n\tr<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> start_x<span class=\"token punctuation\">;</span>\n\tr<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> start_y<span class=\"token punctuation\">;</span>\n\tr<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">=</span> start_dir<span class=\"token punctuation\">;</span>\n\tr<span class=\"token punctuation\">.</span>move <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\tq<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\trobot now_r <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tq<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> now_x <span class=\"token operator\">=</span> now_r<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> now_y <span class=\"token operator\">=</span> now_r<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> now_dir <span class=\"token operator\">=</span> now_r<span class=\"token punctuation\">.</span>dir<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">int</span> now_move <span class=\"token operator\">=</span> now_r<span class=\"token punctuation\">.</span>move<span class=\"token punctuation\">;</span>\n\t\tvisited<span class=\"token punctuation\">[</span>now_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>now_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>now_dir<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>now_x <span class=\"token operator\">==</span> end_x <span class=\"token operator\">&amp;&amp;</span> now_y <span class=\"token operator\">==</span> end_y <span class=\"token operator\">&amp;&amp;</span> now_dir <span class=\"token operator\">==</span> end_dir<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> now_move<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token comment\">// 동1 서2 남3 북4</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> k <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> k <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> k<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">int</span> next_dir <span class=\"token operator\">=</span> directions<span class=\"token punctuation\">[</span>now_dir<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t\t\trobot temp<span class=\"token punctuation\">;</span>\n\t\t\ttemp<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> now_x<span class=\"token punctuation\">;</span>\n\t\t\ttemp<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> now_y<span class=\"token punctuation\">;</span>\n\t\t\ttemp<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">=</span> next_dir<span class=\"token punctuation\">;</span>\n\t\t\ttemp<span class=\"token punctuation\">.</span>move <span class=\"token operator\">=</span> now_move <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visited<span class=\"token punctuation\">[</span>now_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>now_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_dir<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\tvisited<span class=\"token punctuation\">[</span>now_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>now_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_dir<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tq<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> l <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> l<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">int</span> next_x <span class=\"token operator\">=</span> now_x <span class=\"token operator\">+</span> steps<span class=\"token punctuation\">[</span>now_dir<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> l<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">int</span> next_y <span class=\"token operator\">=</span> now_y <span class=\"token operator\">+</span> steps<span class=\"token punctuation\">[</span>now_dir<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> l<span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>next_x <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> next_x <span class=\"token operator\">></span> M <span class=\"token operator\">||</span> next_y <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span> <span class=\"token operator\">||</span> next_y <span class=\"token operator\">></span> N <span class=\"token operator\">||</span> map<span class=\"token punctuation\">[</span>next_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\t\t\trobot temp<span class=\"token punctuation\">;</span>\n\t\t\ttemp<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> next_x<span class=\"token punctuation\">;</span>\n\t\t\ttemp<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> next_y<span class=\"token punctuation\">;</span>\n\t\t\ttemp<span class=\"token punctuation\">.</span>dir <span class=\"token operator\">=</span> now_dir<span class=\"token punctuation\">;</span>\n\t\t\ttemp<span class=\"token punctuation\">.</span>move <span class=\"token operator\">=</span> now_move <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>visited<span class=\"token punctuation\">[</span>next_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>now_dir<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t\tvisited<span class=\"token punctuation\">[</span>next_x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>next_y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>now_dir<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t\t\t\tq<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 세로 M 가로 N</span>\n\t<span class=\"token keyword\">int</span> start_x<span class=\"token punctuation\">,</span> start_y<span class=\"token punctuation\">,</span> start_dir<span class=\"token punctuation\">,</span> end_x<span class=\"token punctuation\">,</span> end_y<span class=\"token punctuation\">,</span> end_dir<span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>M<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> M<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> N<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>map<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>start_x<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>start_y<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>start_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>end_x<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>end_y<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>end_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">bfs</span><span class=\"token punctuation\">(</span>start_x<span class=\"token punctuation\">,</span> start_y<span class=\"token punctuation\">,</span> start_dir<span class=\"token punctuation\">,</span> end_x<span class=\"token punctuation\">,</span> end_y<span class=\"token punctuation\">,</span> end_dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>1,2,3칸을 가는데 가는 길에 1이 있으면 더 이상 진행하지 않는다.</li>\n<li>bfs돌때 좌표뿐만 아니라 방향도 고려해야 한다.</li>\n<li>맵을 벗어나면 더 이상 진행하지 않는다. (M, N이 경계인데 100을 경계로 둬서 영문도 모른 채 틀렸던 실수를 했던 뼈아픈 문제…)</li>\n</ul>","frontmatter":{"title":"백준-1726-완전탐색-로봇","date":"January 20, 2020"}}},"pageContext":{"slug":"/Algorithm/백준-1726-완전탐색-로봇/","previous":{"fields":{"slug":"/Algorithm/백준-9019-완전탐색-DSLR/"},"frontmatter":{"title":"백준-9019-완전탐색-DSLR","category":"Algorithm","draft":false}},"next":{"fields":{"slug":"/Algorithm/백준-2251-완전탐색-물통/"},"frontmatter":{"title":"백준-2251-완전탐색-물통","category":"Algorithm","draft":false}}}}}