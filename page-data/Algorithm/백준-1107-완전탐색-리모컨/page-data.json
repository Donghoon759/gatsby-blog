{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/백준-1107-완전탐색-리모컨/","result":{"data":{"site":{"siteMetadata":{"title":"사진찍는 웹 개발자","author":"Donghoon Song","siteUrl":"https://donghoon759.github.io","comment":{"disqusShortName":"Donghoon","utterances":"Donghoon759/gatsby-blog"},"sponsor":{"buyMeACoffeeId":"jbee"}}},"markdownRemark":{"id":"2daeea07-e50f-5807-b24b-ad64d6efdb9d","excerpt":"문제 M이 0일 때 remove_list 배열을 다르게 줘야함 N이 100이면 0을 출력 M이 10이면 +와 -만 사용해야 하므로 정답은 abs(N-100) M이 10이 아니면 N에서 가장 가까운 최솟값과 최댓값을 찾아서 비교","html":"<p><a href=\"https://www.acmicpc.net/problem/1107\">문제</a></p>\n<div class=\"gatsby-highlight has-highlighted-lines\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">N <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nM <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"gatsby-highlight-code-line\">answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span></span>start <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\nbuttons <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">if</span> M <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    remove_list <span class=\"token operator\">=</span> <span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    remove_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> remove_list<span class=\"token punctuation\">:</span>\n    buttons<span class=\"token punctuation\">.</span>remove<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">num_check</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    num_list <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> num_list<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> buttons<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">digit_check</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    cnt <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nlowerValue <span class=\"token operator\">=</span> N\nupperValue <span class=\"token operator\">=</span> N\nansValue <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> N <span class=\"token operator\">!=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> M<span class=\"token operator\">!=</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">while</span> lowerValue <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> num_check<span class=\"token punctuation\">(</span>lowerValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                ansValue <span class=\"token operator\">=</span> lowerValue\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">if</span> num_check<span class=\"token punctuation\">(</span>upperValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n                ansValue <span class=\"token operator\">=</span> upperValue\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">if</span> lowerValue <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                upperValue<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n                <span class=\"token keyword\">continue</span>\n            lowerValue<span class=\"token operator\">-=</span><span class=\"token number\">1</span>\n            upperValue<span class=\"token operator\">+=</span><span class=\"token number\">1</span>\n        cnt <span class=\"token operator\">=</span> digit_check<span class=\"token punctuation\">(</span>ansValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>N<span class=\"token operator\">-</span>ansValue<span class=\"token punctuation\">)</span>\n        normalCnt <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>N<span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lowerValue<span class=\"token punctuation\">,</span> upperValue<span class=\"token punctuation\">,</span> normalCnt<span class=\"token punctuation\">)</span>\n        answer <span class=\"token operator\">=</span> <span class=\"token builtin\">min</span><span class=\"token punctuation\">(</span>cnt<span class=\"token punctuation\">,</span> normalCnt<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>N<span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>M이 0일 때 remove_list 배열을 다르게 줘야함</li>\n<li>N이 100이면 0을 출력</li>\n<li>M이 10이면 +와 -만 사용해야 하므로 정답은 abs(N-100)</li>\n<li>M이 10이 아니면 N에서 가장 가까운 최솟값과 최댓값을 찾아서 비교</li>\n</ul>","frontmatter":{"title":"백준-1107-완전탐색-리모컨","date":"January 16, 2020"}}},"pageContext":{"slug":"/Algorithm/백준-1107-완전탐색-리모컨/","previous":{"fields":{"slug":"/Algorithm/백준-1476-완전탐색-날짜 계산/"},"frontmatter":{"title":"백준-1476-완전탐색-날짜 계산","category":"Algorithm","draft":false}},"next":{"fields":{"slug":"/Algorithm/백준-10819-완전탐색-차이를 최대로/"},"frontmatter":{"title":"백준-10819-완전탐색-차이를 최대로","category":"Algorithm","draft":false}}}}}